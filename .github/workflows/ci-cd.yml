name: CI/CD

on:
  push:
    branches: ["*"]
  pull_request:

permissions:
  contents: write

jobs:
  build-test-package:
    runs-on: windows-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Upgrade pip
        run: python -m pip install --upgrade pip

      - name: Install dependencies
        run: pip install -r requirements.txt

      - name: Run tests
        run: pytest --maxfail=1 --disable-warnings -q

      - name: Build MSI installer
        run: |
          python setup_cx_freeze.py build
          python setup_cx_freeze.py bdist_msi

      - name: Upload MSI Artifact
        uses: actions/upload-artifact@v4
        with:
          name: MatlabHelper-msi
          path: dist/*.msi

      - name: Locate MSI asset
        if: github.ref == 'refs/heads/master'
        id: msi
        shell: pwsh
        run: |
          $msi = Get-ChildItem -Path dist -Filter *.msi | Sort-Object LastWriteTime -Descending | Select-Object -First 1
          if (-not $msi) { throw 'MSI artifact not found in dist/' }
          "path=$($msi.FullName)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append
          "name=$($msi.Name)" | Out-File -FilePath $env:GITHUB_OUTPUT -Encoding utf8 -Append

      - name: Publish GitHub release
        if: github.ref == 'refs/heads/master'
        shell: pwsh
        env:
          GH_TOKEN: ${{ github.token }}
          GITHUB_TOKEN: ${{ github.token }}
        run: |
          $tag = "ci-${{ github.run_id }}-${{ github.run_attempt }}"
          $title = "Automated build ${{ github.run_number }}"
          $notes = "Automated MSI build for commit ${{ github.sha }}."
          $asset = "${{ steps.msi.outputs.path }}"
          gh release create $tag $asset --repo "${{ github.repository }}" --target "${{ github.sha }}" --title $title --notes $notes
